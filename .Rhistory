library(supercells)
?supercells
vol = terra::rast(system.file("raster/volcano.tif", package = "supercells"))
plot(vol)
terra::plot(vol)
install.packages("stringr")
library(supercells)
library(supercells)
library(terra)
library(sf)
vol = rast(system.file("raster/volcano.tif", package = "supercells"))
vol_slic1 = supercells(vol, k = 50, compactness = 1)
plot(vol)
plot(st_geometry(vol_slic1), add = TRUE, lwd = 0.2)
?supercells
?plot
available::available("mojpakiet", browse = FALSE)
usethis::create_package("~/Documents/mojpakiet")
remotes::install_github("nowosad/reedsalomon")
remotes::install_github("nowosad/reedsolomon")
citation("reedsolomon")
powierzchnia = function(x){
a = x[1, 2] - x[1, 1]
b = x[2, 2] - x[2, 1]
a * b
}
#| message: false
library(testthat)
nowy_p = matrix(c(0, 0, 6, 5), ncol = 2)
nowy_p
powierzchnia(nowy_p)
# expect_
expect_length(powierzchnia(nowy_p), 1)
expect_equal(powierzchnia(nowy_p), 30)
nowy_prostokat(3, 5, 2, "a")
expect_error(nowy_prostokat(3, 5, 2, "a"))
expect_error(powierzchnia(3, 5, 2, "a"))
powierzchnia(3, 5, 2, "a")
expect_error(powierzchnia(3, 5, 2, "a"))
powierzchnia = function(x){
a = abs(x[1, 2] - x[1, 1])
b = abs(x[2, 2] - x[2, 1])
a * b
}
nowy_p = matrix(c(0, 0, 6, 5), ncol = 2)
nowy_p
# expect_
expect_length(powierzchnia(nowy_p), 1)
expect_equal(powierzchnia(nowy_p), 30)
expect_error(powierzchnia(3, 5, 2, "a"))
powierzchnia = function(x){
a = abs(x[1, 2] - x[1, 1])
b = abs(x[2, 2] - x[2, 1])
a * b * 4324
}
nowy_p = matrix(c(0, 0, 6, 5), ncol = 2)
nowy_p
# expect_
expect_length(powierzchnia(nowy_p), 1)
expect_equal(powierzchnia(nowy_p), 30)
minus_1 = function(x){
if(is.character(x)){
stop("Argument `x` musi być zmienną numeryczną, a nie znakową.")
} else if(is.logical(x)){
warning(paste("Argument `x` jest zmienną logiczną.",
"Czy nie chcesz użyć zmiennej numerycznej?"))
} else {
message("Wow. Argument `x` jest oczekiwaną zmienną numeryczną.")
}
abs(x - 1)
}
minus_1(1)
minus_1(TRUE)
minus_1("pies")
minus_1("pies")
